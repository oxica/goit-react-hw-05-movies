{"version":3,"file":"static/js/MovieDetailsPage.4319d651.chunk.js","mappings":"oPACA,EAAiC,yCAAjC,EAAqF,mCAArF,EAA+H,+BAA/H,EAAuK,iCAAvK,EAAmN,mC,SCa7MA,GAAcC,EAAAA,EAAAA,OAAK,kBACvB,iCAEIC,GAAgBD,EAAAA,EAAAA,OAAK,kBACzB,iCAGa,SAASE,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsBC,EAAAA,EAAAA,MAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,MAEbC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeT,GAASU,MAAK,SAAAP,GAAK,OAAIC,EAASD,QAC9C,CAACH,IAMJ,OACE,gCACIG,GAGA,iCACE,mBAAQQ,KAAK,SAASC,QAVb,WAAO,IAAD,IACrBhB,EAAQiB,KAAR,iBAAaf,QAAb,IAAaA,GAAb,UAAaA,EAAUgB,aAAvB,aAAa,EAAiBC,KAAKjB,gBAAnC,QAA+C,YASzC,sBAGA,iBAAKkB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEC,IACEf,EAAMgB,YACFC,EAAAA,GAAYjB,EAAMgB,YADtB,0DAIFE,IAAKlB,EAAMmB,MACXC,MAAM,GACNC,OAAO,QAIX,4BACE,wBAAKrB,EAAMmB,SACX,kDAAwC,GAArBnB,EAAMsB,cAAzB,QACA,sCACA,iCAAOtB,EAAMuB,aACb,oCACA,iCAAOvB,EAAMwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,oBA1BxD,gBAAKf,UAAWC,EAAhB,sCA+BF,mBACA,mDACA,4BACE,SAAC,KAAD,CACEe,GAAE,UAAK1B,EAAL,SACFU,UAAWC,EACXgB,gBAAiBhB,EAHnB,mBAOA,SAAC,KAAD,CACEe,GAAE,UAAK1B,EAAL,YACFU,UAAWC,EACXgB,gBAAiBhB,EAHnB,yBASF,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAO7B,KAAI,UAAKA,EAAL,SAAX,UACE,SAACb,EAAD,CAAeM,QAASA,OAG1B,SAAC,KAAD,CAAOO,KAAI,UAAKA,EAAL,YAAX,UACE,SAACf,EAAD,CAAaQ,QAASA,gB,kOC9FlCqC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCACNC,EAAW,+BACJnB,EAAY,kCAAlB,SAEQoB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsClC,EAAtC,+BAA4C,GAAImC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMpC,EAAKmC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OAAID,EAAJ,qCAAyCD,IAGjE,SAAS7B,EAAeyC,GAC7B,OAAOV,EAAuB,GAAD,OACxBD,EADwB,kBACNW,EADM,oBACQZ,EADR,oBAKxB,SAASa,EAAeD,GAC7B,OAAOV,EAAuB,GAAD,OACxBD,EADwB,kBACNW,EADM,4BACgBZ,EADhB,oBAKxB,SAASc,EAAkBF,GAChC,OAAOV,EAAuB,GAAD,OACxBD,EADwB,kBACNW,EADM,4BACgBZ,EADhB,oBAWxB,IAAMe,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,+BACkBjB,EADlB,4DACyEgB,GADzE,SAGKjB,IAAAA,IAAUkB,GAHf,uBAGZC,EAHY,EAGlBC,KAHkB,kBAKnBD,GALmB,2CAAH","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetailsPage_movieContainer__eXMkA\",\"movieImg\":\"MovieDetailsPage_movieImg__JgASc\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"active\":\"MovieDetailsPage_active__52Wu-\",\"notFound\":\"MovieDetailsPage_notFound__bS-BD\"};","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  Switch,\n  Route,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport { fetchMovieById, IMAGE_URL } from '../../services/movies-api';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieReview = lazy(() =>\n  import('../MovieReview' /* webpackChunkName:\"MovieReview\" */)\n);\nconst MovieCastView = lazy(() =>\n  import('../MovieCastView' /* webpackChunkName:\"MovieCastView\" */)\n);\n\nexport default function MovieDetailsPage() {\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url, path } = useRouteMatch();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(movie => setMovie(movie));\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from.location ?? '/movies');\n  };\n\n  return (\n    <>\n      {!movie ? (\n        <div className={s.notFound}>This movie is not found</div>\n      ) : (\n        <>\n          <button type=\"button\" onClick={onGoBack}>\n            Go back\n          </button>\n          <div className={s.movieContainer}>\n            <div className={s.movieImg}>\n              <img\n                src={\n                  movie.poster_path\n                    ? IMAGE_URL + movie.poster_path\n                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                }\n                alt={movie.title}\n                widht=\"\"\n                height=\"\"\n              />\n            </div>\n\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {`${movie.vote_average * 10}`}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            </div>\n          </div>\n        </>\n      )}\n      <hr />\n      <p>Additional information</p>\n      <nav>\n        <NavLink\n          to={`${url}/cast`}\n          className={s.link}\n          activeClassName={s.active}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to={`${url}/reviews`}\n          className={s.link}\n          activeClassName={s.active}\n        >\n          Reviews\n        </NavLink>\n      </nav>\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path={`${path}/cast`}>\n            <MovieCastView movieId={movieId} />\n          </Route>\n\n          <Route path={`${path}/reviews`}>\n            <MovieReview movieId={movieId} />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '1c946dce2b60cb636de6f72a25cb04da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCast(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieSearch(name) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n"],"names":["MovieReview","lazy","MovieCastView","MovieDetailsPage","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","useEffect","fetchMovieById","then","type","onClick","push","state","from","className","s","src","poster_path","IMAGE_URL","alt","title","widht","height","vote_average","overview","genres","map","genre","name","join","to","activeClassName","Suspense","fallback","Loader","axios","KEY","BASE_URL","fetchWithErrorHandling","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","id","fetchMovieCast","fetchMovieReviews","searchMovies","stringToSearch","queryString","movies","data"],"sourceRoot":""}