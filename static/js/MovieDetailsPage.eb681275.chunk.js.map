{"version":3,"file":"static/js/MovieDetailsPage.eb681275.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetailsPage_movieContainer__eXMkA\",\"movieImg\":\"MovieDetailsPage_movieImg__JgASc\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"active\":\"MovieDetailsPage_active__52Wu-\",\"notFound\":\"MovieDetailsPage_notFound__bS-BD\"};","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { getMovieDetails, IMAGE_URL } from '../../services/movies-api';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieReview = lazy(() =>\n  import('../MovieReview' /* webpackChunkName:\"MovieReview\" */)\n);\nconst MovieCastView = lazy(() =>\n  import('../MovieCastView' /* webpackChunkName:\"MovieCastView\" */)\n);\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const { url, path } = useRouteMatch();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const currentMovie = await getMovieDetails(movieId);\n\n      setMovie(currentMovie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <>\n      {!movie ? (\n        <div className={s.notFound}>This movie is not found</div>\n      ) : (\n        <>\n          <button type=\"button\" onClick={onGoBack}>\n            Go back\n          </button>\n          <div className={s.movieContainer}>\n            <div className={s.movieImg}>\n              <img\n                src={\n                  movie.poster_path\n                    ? IMAGE_URL + movie.poster_path\n                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                }\n                alt={movie.title}\n                widht=\"\"\n                height=\"\"\n              />\n            </div>\n\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {`${movie.vote_average * 10}`}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            </div>\n          </div>\n        </>\n      )}\n      <hr />\n      <p>Additional information</p>\n      <nav>\n        <NavLink\n          to={{ pathname: `${url}/cast`, state: location.state }}\n          className={s.link}\n          activeClassName={s.active}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to={{ pathname: `${url}/reviews`, state: location.state }}\n          className={s.link}\n          activeClassName={s.active}\n        >\n          Reviews\n        </NavLink>\n      </nav>\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path={`${path}/cast`}>\n            <MovieCastView movieId={movieId} />\n          </Route>\n\n          <Route path={`${path}/reviews`}>\n            <MovieReview movieId={movieId} />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '1c946dce2b60cb636de6f72a25cb04da';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["MovieReview","lazy","MovieCastView","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","history","useHistory","location","useLocation","useRouteMatch","url","path","useEffect","getMovie","getMovieDetails","currentMovie","type","onClick","push","state","from","className","s","src","poster_path","IMAGE_URL","alt","title","widht","height","vote_average","overview","genres","map","genre","name","join","to","pathname","activeClassName","Suspense","fallback","Loader","axios","KEY","searchMovies","stringToSearch","queryString","movies","data","fetchTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}