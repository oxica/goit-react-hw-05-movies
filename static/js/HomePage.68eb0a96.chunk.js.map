{"version":3,"file":"static/js/HomePage.68eb0a96.chunk.js","mappings":"0OA4DA,UAxDiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,MADV,gBACRC,EADQ,EACRA,QAERJ,EAAUI,GAHM,2CAAH,qDAMfF,MACC,KAGD,iCACE,2CAECH,GACCA,EAAOM,KACL,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,MAFF,OAKE,yBACE,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,iBAAgBH,IACxBI,MAAO,CACLC,KAAM,CACJf,SAAAA,EACAgB,MAAO,kBANf,UAmBE,uBAAIL,OApBCD,a,kOC5BvBO,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCACCC,EAAY,kCAEZC,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,+BACkBJ,EADlB,4DACyEG,GADzE,SAEKJ,IAAAA,IAAUK,GAFf,uBAEZnB,EAFY,EAElBoB,KAFkB,kBAGnBpB,GAHmB,2CAAH,sDAMZqB,EAAe,mCAAG,WAAMC,GAAN,kFACvBH,EADuB,gBACAG,EADA,qBACoBP,EADpB,4BAECD,IAAAA,IAAUK,GAFX,uBAEfI,EAFe,EAErBH,KAFqB,kBAGtBG,GAHsB,2CAAH,sDAMfnB,EAAmB,mCAAG,+FAC3Be,EAD2B,qCACiBJ,GADjB,SAEFD,IAAAA,IAAUK,GAFR,uBAEnBnB,EAFmB,EAEzBoB,KAFyB,kBAG1BpB,GAH0B,2CAAH,qDAMnBwB,EAAY,mCAAG,WAAMF,GAAN,kFACpBH,EADoB,gBACGG,EADH,sDAEHR,IAAAA,IAAUK,GAFP,uBAElBC,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZK,EAAU,mCAAG,WAAMH,GAAN,kFAClBH,EADkB,gBACKG,EADL,sDAEDR,IAAAA,IAAUK,GAFT,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH","sources":["pages/HomePage.js","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../services/movies-api';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const { results } = await fetchTrendingMovies();\n\n      setMovies(results);\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Tranding today</h1>\n\n      {movies &&\n        movies.map(\n          ({\n            id,\n            title,\n            // poster_path\n          }) => (\n            <ul>\n              <li key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${`${id}`}`,\n                    state: {\n                      from: {\n                        location,\n                        label: 'Back to Home',\n                      },\n                    },\n                  }}\n                >\n                  {/* <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                      : 'https://pomogaetsrazu.ru/images/offers/2829219234.jpg'\n                  }\n                  alt={title}\n                /> */}\n                  <p>{title}</p>\n                </Link>\n              </li>\n            </ul>\n          )\n        )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '1c946dce2b60cb636de6f72a25cb04da';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["location","useLocation","useState","movies","setMovies","useEffect","getMovies","fetchTrendingMovies","results","map","id","title","to","pathname","state","from","label","axios","KEY","IMAGE_URL","searchMovies","stringToSearch","queryString","data","getMovieDetails","movieId","movie","getMovieCast","getReviews"],"sourceRoot":""}