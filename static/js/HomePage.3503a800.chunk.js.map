{"version":3,"file":"static/js/HomePage.3503a800.chunk.js","mappings":"0OA4DA,UAxDiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,MADV,gBACRC,EADQ,EACRA,QAERJ,EAAUI,GAHM,2CAAH,qDAMfF,MACC,KAGD,iCACE,2CAECH,GACCA,EAAOM,KACL,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,MAFF,OAKE,yBACE,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,iBAAgBH,IACxBI,MAAO,CACLC,KAAM,CACJf,SAAAA,EACAgB,MAAO,kBANf,UAmBE,uBAAIL,OApBCD,a,kOC5BvBO,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCACNC,EAAW,+BACJC,EAAY,kCAAlB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAiBO,SAASC,EAAerB,GAC7B,OAAOW,EAAuB,GAAD,OACxBF,EADwB,kBACNT,EADM,4BACgBQ,EADhB,oBAKxB,SAASc,EAAkBtB,GAChC,OAAOW,EAAuB,GAAD,OACxBF,EADwB,kBACNT,EADM,4BACgBQ,EADhB,oBAWxB,IAAMe,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,+BACkBjB,EADlB,4DACyEgB,GADzE,SAGKjB,IAAAA,IAAUkB,GAHf,uBAGZhC,EAHY,EAGlBiC,KACRC,QAAQC,IAAInC,GAJc,kBAMnBA,GANmB,2CAAH,sDASZoC,EAAe,mCAAG,WAAMC,GAAN,kFACvBL,EADuB,gBACAK,EADA,qBACoBtB,EADpB,4BAGCD,IAAAA,IAAUkB,GAHX,uBAGfM,EAHe,EAGrBL,KAHqB,kBAKtBK,GALsB,2CAAH,sDAQflC,EAAmB,mCAAG,+FAC3B4B,EAD2B,qCACiBjB,GADjB,SAGFD,IAAAA,IAAUkB,GAHR,uBAGnBhC,EAHmB,EAGzBiC,KAHyB,kBAK1BjC,GAL0B,2CAAH","sources":["pages/HomePage.js","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../services/movies-api';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const { results } = await fetchTrendingMovies();\n\n      setMovies(results);\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Tranding today</h1>\n\n      {movies &&\n        movies.map(\n          ({\n            id,\n            title,\n            // poster_path\n          }) => (\n            <ul>\n              <li key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${`${id}`}`,\n                    state: {\n                      from: {\n                        location,\n                        label: 'Back to Home',\n                      },\n                    },\n                  }}\n                >\n                  {/* <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                      : 'https://pomogaetsrazu.ru/images/offers/2829219234.jpg'\n                  }\n                  alt={title}\n                /> */}\n                  <p>{title}</p>\n                </Link>\n              </li>\n            </ul>\n          )\n        )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '1c946dce2b60cb636de6f72a25cb04da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\n// export function fetchTrendMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n// }\n\n// export function fetchMovieById(id) {\n//   return fetchWithErrorHandling(\n//     `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n//   );\n// }\n\nexport function fetchMovieCast(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n\n// export function fetchMovieSearch(name) {\n//   return fetchWithErrorHandling(\n//     `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n//   );\n// }\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n  console.log(movies);\n\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n\n  const { data: movie } = await axios.get(queryString);\n\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n"],"names":["location","useLocation","useState","movies","setMovies","useEffect","getMovies","fetchTrendingMovies","results","map","id","title","to","pathname","state","from","label","axios","KEY","BASE_URL","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovieCast","fetchMovieReviews","searchMovies","stringToSearch","queryString","data","console","log","getMovieDetails","movieId","movie"],"sourceRoot":""}