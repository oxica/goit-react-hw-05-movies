{"version":3,"file":"static/js/MovieCastView.9bb3d069.chunk.js","mappings":"4PAIe,SAASA,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACtC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACSC,EAAAA,EAAAA,IAAaN,GADtB,gBACNE,EADM,EACNA,KACRC,EAAQD,GAFM,2CAAH,qDAKbG,MACC,CAACL,KAGF,wBACGE,GACCA,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,gBACEC,IACEH,EACII,EAAAA,GAAYJ,EADJ,0DAIdK,IAAKJ,EACLK,MAAM,MACNC,OAAO,MAET,uBAAIN,KACJ,uCAAeC,OAZRH","sources":["pages/MovieCastView.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getMovieCast, IMAGE_URL } from '../services/movies-api';\nimport PropTypes from 'prop-types';\n\nexport default function MovieCastView({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { cast } = await getMovieCast(movieId);\n      setCast(cast);\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? IMAGE_URL + profile_path\n                  : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n              }\n              alt={name}\n              width=\"100\"\n              height=\"\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nMovieCastView.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["MovieCastView","movieId","useState","cast","setCast","useEffect","getCast","getMovieCast","map","id","profile_path","name","character","src","IMAGE_URL","alt","width","height"],"sourceRoot":""}